@model AllProductsQueryModel

@{
    ViewBag.Title = "Boots";
    ViewBag.AllowProductEdit = true;
}

<form method="get">
    <div class="row">
        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Brand"></label>
                <select asp-for="Brand" class="form-control">
                    <option value="">All</option>

                    @foreach (var brand in Model.Brands)
                    {
                        <option value="@brand">@brand</option>
                    }
                </select>
            </div>
        </div>


        <div class="form-group col-md-4">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control">
        </div>
        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control" onselect="refreshPage()" id="sortingOptions">
                    <option value="0">Price 0-999..</option>
                    <option value="1">Price 999-0...</option>

                </select>
            </div>
        </div>
    </div>
</form>


<div class="row">
    @foreach (var item in Model.Products)
    {
        <div class="col-md-3">
            <div class="card mb-4">
                <img class="card-img-top" src="@item.ImageUrl" alt="@item.Brand @item.Model">
                <div class="card-body text-center">
                    <h5 class="card-title text-center"> @item.Brand @item.Model</h5>
                    <div class="price">
                        <span class="price" style="color: orangered">@item.Price</span>
                    </div>
                    <a asp-controller="Products" asp-area="" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">View</a>
                   

                    @if (item.IsAvialable == "No" || item.UnitsInStock == 0)
                    {
                        <a class="btn" style="background-color: red">Not Avialable</a>
                    }

                    @if (User.IsInRole("Administrator"))
                    {
                        <a asp-controller="Products" asp-action="Edit" asp-area="Admin" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                        <a asp-controller="Products" asp-action="Delete" asp-area="Admin" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
                    }

                </div>
            </div>
        </div>
    }

</div>
@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalProducts / AllProductsQueryModel.ProductsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Products"
           asp-action="Boots"
           asp-route-currentPage="@previousPage"
           asp-route-brand="@Model.Brand"
           asp-route-searchTerm="@Model.SearchTerm"><<</a>
    </div>

    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
                                     !Model.Products.Any();
    }

    <div class="col-md-6">
        <a class="btn btn-primary float-sm-right @(shouldButtonBeDisabled ? "disabled" : string.Empty)" style="margin-top: 10px"
           asp-controller="Products"
           asp-action="Boots"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-brand="@Model.Brand"
           asp-route-searchTerm="@Model.SearchTerm">>></a>
    </div>
</div>

@if (!Model.Products.Any())
{
    <h2 class="text-center">No products found by the given criteria!</h2>
}



<script>
    function refreshPage() {
        System.Windows.Forms.SendKeys.Send("{ENTER}");
    }
</script>